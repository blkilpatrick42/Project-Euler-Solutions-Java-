//Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
//
//1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
//
//By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

package eulerapplication;
public class problem2 {
    public static int solve(int upTo){
        int total = 0;
        int currentFib = 0;
        for(int i = 0; currentFib < upTo; i++){
            currentFib = fib(i);
            if(currentFib % 2 == 0 && currentFib < upTo){
                total += currentFib;
            }
        }
        return total;
    }
    //finds the nth fibonacci number
    public static int fib(int n){
        if(n == 0){
            return 0;
        }
        if(n == 1){
            return 1;
        }
        else if(n == 2){
            return 1;
        }
        else{
            return fib(n-2)+fib(n-1);
        }
    }
}
